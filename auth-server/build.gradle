buildscript {
	project.ext {
        springBootVersion  = '1.3.5.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    
   dependencies {
     	classpath "io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${project.springBootVersion}"
    }
}

apply plugin: "io.spring.dependency-management"
apply plugin: 'eclipse'
apply plugin: 'spring-boot'
apply plugin: 'java'
apply plugin: 'application'

sourceCompatibility = 1.8
targetCompatibility = 1.8


jar {
    baseName = 'auth-server'
    version =  '0.1.0-SNAPSHOT'
}

repositories { 
	mavenCentral() 
	jcenter()
}

mainClassName  = 'com.jci.auth.Application'

version = '1.0'

task uberjar(type: Jar) {
    from files(sourceSets.main.output.classesDir)
    from {configurations.compile.collect {zipTree(it)}} {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
}

manifest {
    attributes 'Main-Class': 'com.jci.auth.Application'
    }
}
dependencies {
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-actuator'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'mysql:mysql-connector-java'
	compile 'org.springframework.cloud:spring-cloud-config-client'
	compile 'org.springframework.cloud:spring-cloud-starter-eureka'
	
	compile('org.springframework.cloud:spring-cloud-starter-oauth2')
    compile('org.springframework.boot:spring-boot-starter-security')   
    compile("org.springframework.boot:spring-boot-starter-jdbc")
    testCompile('org.springframework.boot:spring-boot-starter-test') 
	
}


dependencyManagement {
	imports { 
		mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Brixton.RELEASE" 
	}
}

group = 'jci'
mainClassName = 'com.jci.auth.Application'

bootRun {
    jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=4100,suspend=n','-Dspring.profiles.active=development']
}

run {
    jvmArgs = ['-Xdebug', '-Xrunjdwp:server=y,transport=dt_socket,address=4100,suspend=n','-Dspring.profiles.active=development']
}

task createWrapper(type: Wrapper) {
    gradleVersion = '2.13'
}
apply plugin: 'maven'

task createPom << {
    pom {
        project {
            groupId 'com.jci'
            artifactId 'auth-server'
            version '1.0.0'

            inceptionYear '2016'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
        }
    }.writeTo("pom.xml")
}